syntax = "proto3";

package snapfaas.syscalls;

message Invoke {
  string gate = 1;
  string payload = 2;
}

message DupGate {
  string gate = 1;
  DcLabel policy = 2;
}

message DeclassifyResponse {
  optional DcLabel label = 1;
}

message TokenList {
  repeated string tokens = 1;
}

message Clause {
  // A disjuction of principals
  repeated TokenList principals = 1;
}

message Component {
  // A conjunction of clauses
  repeated Clause clauses = 1;
}

message DcLabel {
  // None means DcFalse, empty clauses means DcTrue, otherwise DcFormula
  optional Component secrecy = 1;
  // None means DcFalse, empty clauses means DcTrue, otherwise DcFormula
  optional Component integrity = 2;
}

message Request {
  string payload = 1;
}

message Response {
  string payload = 1;
}

message ReadKey {
  bytes key = 1;
}

message ReadKeyResponse {
  optional bytes value = 1;
}

message WriteKey {
  bytes key = 1;
  bytes value = 2;
}

message WriteKeyResponse {
  bool success = 1;
}

message ReadDir {
  bytes dir = 1;
}

message ReadDirResponse {
  repeated bytes keys = 1;
}

enum HttpVerb {
  GET = 0;
  POST = 1;
  PUT = 2;
  DELETE = 4;
}

message GithubRest {
  HttpVerb verb = 1;
  string route = 2;
  optional string body = 3;
  bool toblob = 4;
}

message GithubRestResponse {
  bytes data = 1;
  uint32 status = 2;
}

message GetCurrentLabel {
}

message FSRead {
  string path = 1;
}

message FSWrite {
  string path = 1;
  bytes data = 2;
}

message FSCreateDir {
  string baseDir = 1;
  string name = 2;
  DcLabel label = 3;
}

message FSCreateFile {
  string baseDir = 1;
  string name = 2;
  DcLabel label = 3;
}

message ExercisePrivilege {
  DcLabel target = 1;
}

message BlobCreate {
  optional uint64 size = 1;
}

message BlobWrite {
  uint64 fd = 1;
  bytes data = 2;
}

message BlobFinalize {
  uint64 fd = 1;
  bytes data = 2;
}

message BlobResponse {
  bool success = 1;
  uint64 fd = 2;
  bytes data = 3;
}

message BlobOpen {
  string name = 1;
}

message BlobRead {
  uint64 fd = 1;
  optional uint64 offset = 2;
  optional uint64 length = 3;
}

message BlobClose {
  uint64 fd = 1;
}

message FSList {
  string path = 1;
}

message EntryNameArr {
  repeated string names = 1;
}

message FSListResponse {
  optional EntryNameArr value = 1;
}

message FSFacetedList {
  string path = 1;
}

message FSFacetedListInner {
  map<string, EntryNameArr> facets = 1;
}

message FSFacetedListResponse {
  optional FSFacetedListInner value = 1;
}

message FSCreateFacetedDir {
  string baseDir = 1;
  string name = 2;
}

message Syscall {
  oneof syscall {
    Response response = 1;
    ReadKey readKey = 2;
    WriteKey writeKey = 3;
    GetCurrentLabel getCurrentLabel = 4;
    DcLabel taintWithLabel = 5;
    GithubRest githubRest = 6;
    Invoke invoke = 7;
    FSRead fsRead = 8;
    FSWrite fsWrite = 9;
    FSCreateDir fsCreateDir = 10;
    FSCreateFile fsCreateFile = 11;
    Component declassify = 12;
    BlobCreate createBlob = 13;
    BlobWrite writeBlob = 14;
    BlobFinalize finalizeBlob = 15;
    BlobOpen openBlob = 16;
    BlobRead readBlob = 17;
    BlobClose closeBlob = 18;
    ReadDir readDir = 19;
    FSList fsList = 20;
    FSFacetedList fsFacetedList = 21;
    FSCreateFacetedDir fsCreateFacetedDir = 22;
    DupGate dupGate = 23;
    TokenList subPrivilege = 24;
    string buckleParse = 25;
  }
}
